{"version":3,"sources":["components/ErrorMesage.js","components/Note.js","services/notes.js","App.js","index.js"],"names":["ErrorMesage","message","className","Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","noteToChange","find","n","changedNoteImportance","updatedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAUeA,EARK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OAAKA,EAIE,qBAAKC,UAAU,wBAAf,SAAwCD,IAHtC,MCQIE,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCNpCI,EAAU,aAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCVvCK,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GA2FSC,EApFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IAAqBzB,MAAK,SAAC0B,GACzBX,EAASW,QAEV,IACHH,QAAQC,IAAI,SAAUV,EAAMa,OAAQ,SAEpC,IAyCMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAACtC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,8BACE,yBAAQE,QAAS,kBAAMuB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,cAAC,EAAD,CAAa9B,QAASgC,IACtB,6BACGQ,EAAYE,KAAI,SAACvC,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAtCD,SAACa,GAC1BkB,QAAQC,IAAI,iBAAmBnB,EAAK,wBACpC,IAAM0B,EAAejB,EAAMkB,MAAK,SAACC,GAAD,OAAOA,EAAE5B,KAAOA,KAC1C6B,EAAqB,2BACtBH,GADsB,IAEzBrC,WAAYqC,EAAarC,YAG3B+B,EACUpB,EAAI6B,GACXlC,MAAK,SAACmC,GACLpB,EAASD,EAAMgB,KAAI,SAACG,GAAD,OAAQA,EAAE5B,KAAOA,EAAK4B,EAAIE,SAE9CC,OAAM,SAACC,GACNhB,EAAgB,aAAD,OACAU,EAAapC,QADb,sCAGf2C,YAAW,kBAAMjB,EAAgB,QAAO,MACxCN,EAASD,EAAMe,QAAO,SAACI,GAAD,OAAOA,EAAE5B,KAAOA,SAoBVkC,CAAmBhD,EAAKc,MAF3Cd,EAAKc,SAMhB,uBAAMmC,SA7DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASqB,EACT4B,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAG7BvB,EAAmBkB,GAAY3C,MAAK,SAACgB,GACnCD,EAASD,EAAMmC,OAAOjC,IACtBC,EAAW,QAmDX,UACE,uBAAOiC,MAAOlC,EAASmC,SAhDJ,SAACV,GACxBlB,QAAQC,IAAIiB,EAAMW,OAAOF,OACzBjC,EAAWwB,EAAMW,OAAOF,UA+CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MChGNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d208f41a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ErrorMesage = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  return <div className=\"ErrorMessage__wrapper\">{message}</div>;\n};\n\nexport default ErrorMesage;\n","import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMesage from \"./components/ErrorMesage\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"effect\");\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  console.log(\"render\", notes.length, \"notes\");\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService.create(noteObject).then((newNote) => {\n      setNotes(notes.concat(newNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = (id) => {\n    console.log(\"importance of \" + id + \" needs to be toggled\");\n    const noteToChange = notes.find((n) => n.id === id);\n    const changedNoteImportance = {\n      ...noteToChange,\n      important: !noteToChange.important,\n    };\n\n    noteService\n      .update(id, changedNoteImportance)\n      .then((updatedNote) => {\n        setNotes(notes.map((n) => (n.id !== id ? n : updatedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `The note '${noteToChange.content}' was already deleted from server`\n        );\n        setTimeout(() => setErrorMessage(null), 3500);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ErrorMesage message={errorMessage} />\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}